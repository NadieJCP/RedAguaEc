/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.redagua;

import controlador.Controlador;
import modelo.Usuario;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Jairo
 */
public class Usuarios extends javax.swing.JDialog {
    
    Controlador controlador;
    Usuario usuario;
    String ruta, celu, nCedula;
    String[] miembros;
    boolean fin = false;
    String[] meses = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
    String rutaFoto;
    
    public Usuarios(Controlador controlador, Usuario usuario) {
        super(new JFrame(), true);
        initComponents();
        this.controlador = controlador;
        this.usuario = usuario;
        nCedula = "";
        celu = "";
        ruta = "";
        analizarRutas();
        if (usuario != null) {
            ponerVariables();
        }
        iniciar();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        celular = new javax.swing.JTextField();
        miembro = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();
        nombres = new javax.swing.JTextField();
        aceptar = new javax.swing.JButton();
        apellidos = new javax.swing.JTextField();
        a = new javax.swing.JComboBox<>();
        cedula = new javax.swing.JTextField();
        correo = new javax.swing.JTextField();
        d = new javax.swing.JComboBox<>();
        a2 = new javax.swing.JComboBox<>();
        m = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pais = new javax.swing.JTextField();
        ciudad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setText("NOMBRES:");

        jLabel7.setText("MIEMBRO:");

        jLabel3.setText("APELLIDOS:");

        jLabel4.setText("CÉDULA:");

        jLabel5.setText("CORREO:");

        celular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                celularKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                celularKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                celularKeyTyped(evt);
            }
        });

        miembro.setText("CELULAR:");

        label.setText("jLabel1");

        buscar.setText("BUSCAR FOTO");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        a.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cedulaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cedulaKeyTyped(evt);
            }
        });

        d.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        a2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        m.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("FECHA NACIMIENTO:");

        jLabel9.setText("PAÍS:");

        jLabel10.setText("CIUDAD:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(miembro, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(pais, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(apellidos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cedula, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(celular, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombres)
                            .addComponent(a, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(ciudad)))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buscar)
                                .addGap(50, 50, 50))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(aceptar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buscar)
                        .addGap(18, 18, 18)
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(miembro))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(pais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ciudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(aceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void celularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularKeyPressed
        celular.setText(celu);
    }//GEN-LAST:event_celularKeyPressed

    private void celularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularKeyReleased
        celular.setText(celu);
    }//GEN-LAST:event_celularKeyReleased

    private void celularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularKeyTyped
        char letra = evt.getKeyChar();
        int value = letra;
        if (value >= 48) {
            if (value <= 57) {
                celu += letra;
                celular.setText(celu);
            } else {
                celular.setText("");
            }
        } else if (value == 8) {
            celu = extraer(celu);
        } else {
            celular.setText("");
        }
    }//GEN-LAST:event_celularKeyTyped

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        JFileChooser explorador = new JFileChooser();
        explorador.setDialogTitle("Buscar Foto...");
        int seleccion = explorador.showDialog(null, "Cargar");
        if (seleccion == 0) {
            File archivo = explorador.getSelectedFile();
            ruta = archivo.getPath();
            nombres.requestFocus();
            mostrarFoto(archivo);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        if (comprobarVacios()) {
            if (comprobarValidez()) {
                File archivo = new File(ruta);
                System.out.println(archivo.getName());
                if (!rutaFoto.isEmpty()) {
                    rutaFoto += archivo.getName();
                } else {
                    rutaFoto = ruta;
                }
                File outFile = new File(rutaFoto);
                if (!ruta.equals(rutaFoto)) {
                    try (FileInputStream in = new FileInputStream(archivo); FileOutputStream out = new FileOutputStream(outFile)) {
                        int c;
                        while ((c = in.read()) != -1) {
                            out.write(c);
                        }
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
                String nombre = nombres.getText();
                String apellido = apellidos.getText();
                String corre = correo.getText();
                if (usuario != null) {
                    controlador.editarUsuario(usuario, nombre, apellido, nCedula, celu, pais.getText(), ciudad.getText(), corre, rutaFoto, miembros[a.getSelectedIndex()], new int[]{1900 + a.getSelectedIndex(), m.getSelectedIndex(), d.getSelectedIndex()});
                } else {
                    usuario = new Usuario(nombre, apellido, nCedula, celu, pais.getText(), ciudad.getText(), corre, ruta, miembros[a.getSelectedIndex()], new int[]{1900 + a.getSelectedIndex(), m.getSelectedIndex(), d.getSelectedIndex()});
                    controlador.anadirUsuario(usuario);
                }
                salir();
            }
        }
    }//GEN-LAST:event_aceptarActionPerformed

    private void cedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyPressed
        cedula.setText(nCedula);
    }//GEN-LAST:event_cedulaKeyPressed

    private void cedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyReleased
        cedula.setText(nCedula);
    }//GEN-LAST:event_cedulaKeyReleased

    private void cedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedulaKeyTyped
        char letra = evt.getKeyChar();
        int value = letra;
        if (value >= 48) {
            if (value <= 57) {
                nCedula += letra;
                cedula.setText(nCedula);
            } else {
                cedula.setText("");
            }
        } else if (value == 8) {
            nCedula = extraer(nCedula);
        } else {
            cedula.setText("");
        }
    }//GEN-LAST:event_cedulaKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        salir();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        dispose();
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> a;
    private javax.swing.JComboBox<String> a2;
    private javax.swing.JButton aceptar;
    private javax.swing.JTextField apellidos;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField cedula;
    private javax.swing.JTextField celular;
    private javax.swing.JTextField ciudad;
    private javax.swing.JTextField correo;
    private javax.swing.JComboBox<String> d;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel label;
    private javax.swing.JComboBox<String> m;
    private javax.swing.JLabel miembro;
    private javax.swing.JTextField nombres;
    private javax.swing.JTextField pais;
    // End of variables declaration//GEN-END:variables

    private void mostrarFoto(File file) {
        try {
            Image img = ImageIO.read(file);
            if (img == null) {
                JOptionPane.showMessageDialog(label, "Debe seleccionar únicamente fotos", "ERROR", JOptionPane.ERROR_MESSAGE, null);
            } else {
                label.setIcon(new ImageIcon(img.getScaledInstance(label.getWidth(), label.getHeight(), 0)));
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private boolean comprobarVacios() {
        if (ruta.isEmpty()) {
            return false;
        } else if (nombres.getText().isEmpty()) {
            nombres.requestFocus();
            return false;
        } else if (apellidos.getText().isEmpty()) {
            apellidos.requestFocus();
            return false;
        } else if (nCedula.isEmpty()) {
            cedula.requestFocus();
            return false;
        } else if (nCedula.length() != 10) {
            cedula.requestFocus();
            return false;
        } else if (correo.getText().isEmpty()) {
            correo.requestFocus();
            return false;
        } else if (celu.isEmpty()) {
            correo.requestFocus();
            return false;
        } else if (celu.length() != 10) {
            correo.requestFocus();
            return false;
        } else if (pais.getText().isEmpty()) {
            pais.requestFocus();
            return false;
        } else if (ciudad.getText().isEmpty()) {
            ciudad.requestFocus();
            return false;
        }
        return true;
    }
    
    private boolean comprobarValidez() {
        if (!correo.getText().contains("@")) {
            mostrarError("Correo inválido", correo);
            return false;
        }
        /*else if (controlador.enviarMensaje("Hola. Bienvenido al club de robotica y programacion.", controlador.rutaRaiz() + "Felicidades\\ingreso.jpg", "MENSAJE DE BIENVENIDA", new String[]{correo.getText()})) {
            mostrarError("Correo inválido", correo);
            return false;
        }*/
        return true;
    }
    
    private void mostrarError(String msg, JTextField correo) {
        JOptionPane.showInternalMessageDialog(this, msg, "ERROR", JOptionPane.ERROR_MESSAGE);
        correo.requestFocus();
    }
    
    private void iniciar() {
        label.setText("");
        a.removeAllItems();
        miembros = new String[]{"Presidente", "Vicepresidente", "Secretario", "Tesorero", "Miembro"};
        for (String palabra : miembros) {
            a.addItem(palabra);
        }
        a2.removeAllItems();
        m.removeAllItems();
        d.removeAllItems();
        llenarFechas();
    }
    
    private String extension() {
        String[] letras = ruta.split("");
        String extension = "";
        int p = 0;
        for (int i = 0; i < letras.length; i++) {
            if (letras[i].equals(".")) {
                p = i;
            }
        }
        for (int i = p; i < letras.length; i++) {
            extension = extension + letras[i];
        }
        return extension;
    }
    
    private String extraer(String inicial) {
        String nuevo = "";
        for (int i = 0; i < inicial.length() - 1; i++) {
            nuevo = nuevo + inicial.charAt(i);
        }
        return nuevo;
    }
    
    private void salir() {
        fin = true;
        setVisible(false);
        dispose();
    }
    
    private void ponerVariables() {
        nombres.setText(usuario.nombre());
        apellidos.setText(usuario.apellido());
        nCedula = usuario.cedula();
        celu = usuario.celular();
        cedula.setText(nCedula);
        correo.setText(usuario.correo());
        celular.setText(celu);
        a.setSelectedItem(usuario.miembro());
        ruta = usuario.ruta();
        if (!ruta.isEmpty()) {
            try {
                label.setIcon(new ImageIcon(ImageIO.read(new File(ruta)).getScaledInstance(label.getWidth(), label.getHeight(), 0)));
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        }
        pais.setText(usuario.pais());
        ciudad.setText(usuario.ciudad());
    }
    
    private void llenarFechas() {
        int year = new GregorianCalendar().get(Calendar.YEAR) - 1950;
        for (int i = 0; i < 12; i++) {
            a2.addItem(String.valueOf(1950 + i));
            m.addItem(meses[i]);
            d.addItem(String.valueOf(i + 1));
        }
        for (int i = 12; i < 31; i++) {
            d.addItem(String.valueOf(i + 1));
            a2.addItem(String.valueOf(1950 + i));
        }
        for (int i = 31; i < year; i++) {
            a2.addItem(String.valueOf(1950 + i));
        }
    }
    
    private void analizarRutas() {
        int n = controlador.totalUsuarios();
        if (n > 0) {
            rutaFoto = new File(controlador.obtenerUsuario(0).ruta()).getParent();
        } else {
            rutaFoto = "";
        }
    }
    
}
