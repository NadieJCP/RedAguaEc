/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.redagua;

import controlador.Controlador;
import modelo.Usuario;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modelo.ExportarFile;
import modelo.ImportarFile;

/**
 *
 * @author Jairo
 */
public class Inicio extends javax.swing.JFrame {

    DefaultListModel<String> mLista;
    String[][] datos;
    Controlador controlador;
    Usuarios usuarios;
    final String ruta = this.getClass().getResource("/com/mycompany/redagua/miembros.log").getPath();

    public Inicio() {
        initComponents();
        Fondo fondo = new Fondo();
        this.setSize(fondo.getSize());
        this.add(fondo);
        mLista = new DefaultListModel<>();
        lista.setModel(mLista);
        controlador = new Controlador(ruta);
        setTitle("RED AGUA ECUADOR - REGISTRO DE MIEMBROS");
        recuperar();
        quitar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        apellidos = new javax.swing.JLabel();
        miembro = new javax.swing.JLabel();
        celular = new javax.swing.JLabel();
        editar = new javax.swing.JButton();
        correo = new javax.swing.JLabel();
        cedula = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        agregar = new javax.swing.JButton();
        quitar = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        nombres = new javax.swing.JLabel();
        cargar = new javax.swing.JButton();
        cargar1 = new javax.swing.JButton();
        info = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        apellidos.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        apellidos.setText("jLabel2");

        miembro.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        miembro.setText("jLabel2");

        celular.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        celular.setText("jLabel2");

        editar.setText("EDITAR");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        correo.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        correo.setText("jLabel2");

        cedula.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cedula.setText("jLabel2");

        lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        agregar.setText("NUEVO");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        quitar.setText("BORRAR");
        quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarActionPerformed(evt);
            }
        });

        label.setText("jLabel1");

        nombres.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nombres.setText("jLabel2");

        cargar.setText("CARGAR DATOS");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        cargar1.setText("EXPORTAR DATOS");
        cargar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargar1ActionPerformed(evt);
            }
        });

        info.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(cargar))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(miembro, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(celular, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cedula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(cargar1))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addGap(277, 277, 277)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(agregar)
                        .addGap(34, 34, 34)
                        .addComponent(quitar)
                        .addGap(36, 36, 36)
                        .addComponent(editar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(info)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nombres)
                        .addGap(18, 18, 18)
                        .addComponent(apellidos)
                        .addGap(18, 18, 18)
                        .addComponent(celular)
                        .addGap(18, 18, 18)
                        .addComponent(miembro)
                        .addGap(18, 18, 18)
                        .addComponent(cedula)
                        .addGap(18, 18, 18)
                        .addComponent(correo))
                    .addComponent(label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargar)
                    .addComponent(cargar1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        int str = lista.getSelectedIndex();
        if (str >= 0) {
            quitar();
            usuarios = new Usuarios(controlador, controlador.obtenerUsuario(str));
            usuarios.setVisible(true);
            if (!usuarios.fin) {
                return;
            }
        }
        actualizar();
    }//GEN-LAST:event_editarActionPerformed

    private void listaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaMouseClicked
        quitar();
        int str = lista.getSelectedIndex();
        if (str >= 0) {
            Usuario u = controlador.obtenerUsuario(str);
            mostrar(u);
        }
    }//GEN-LAST:event_listaMouseClicked

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        quitar();
        usuarios = new Usuarios(controlador, null);
        usuarios.setVisible(true);
        if (!usuarios.fin) {
            return;
        }
        actualizar();
    }//GEN-LAST:event_agregarActionPerformed

    private void quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarActionPerformed
        int str = lista.getSelectedIndex();
        if (str >= 0) {
            int o = JOptionPane.showConfirmDialog(this, "Se borrará toda la información del usuario", "ALERTA", JOptionPane.INFORMATION_MESSAGE);
            if (o == 0) {
                controlador.borrarUsuario(str);
            }
            actualizar();
            quitar();
        }
    }//GEN-LAST:event_quitarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (controlador.modificado(ruta)) {
            int salida = JOptionPane.showConfirmDialog(this, "¿Desea guardar los cambios?", "CAMBIOS REALIZADOS", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (salida == 0) {
                controlador.guardar(ruta);
                salir();
            } else if (salida == 1) {
                salir();
            }
        }

    }//GEN-LAST:event_formWindowClosing

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        JFileChooser explorador = new JFileChooser();
        explorador.setDialogTitle("Buscar Archivo...");
        int seleccion = explorador.showDialog(null, "Cargar");
        if (seleccion == 0) {
            File archivo = explorador.getSelectedFile();
            if (archivo.getPath().endsWith("log")) {
                agregarNuevos();
            } else {
                JOptionPane.showMessageDialog(this, "Validos solo archivos con extension .log", "Archivo no valido", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_cargarActionPerformed

    private void cargar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargar1ActionPerformed
        JFileChooser explorador = new JFileChooser();
        explorador.setDialogTitle("Buscar Archivo...");
        int seleccion = explorador.showSaveDialog(this);
        if (seleccion == 0) {
            File archivo = explorador.getSelectedFile();
            if (archivo.exists()) {
                int v = JOptionPane.showConfirmDialog(this, "¿Desea sobreescribir el archivo?", "ALERTA", JOptionPane.INFORMATION_MESSAGE);
                if (v == 0) {
                    exportar(archivo.getPath());
                }
            } else {
                exportar(archivo.getPath());
            }
        }
    }//GEN-LAST:event_cargar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Inicio().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JLabel apellidos;
    private javax.swing.JButton cargar;
    private javax.swing.JButton cargar1;
    private javax.swing.JLabel cedula;
    private javax.swing.JLabel celular;
    private javax.swing.JLabel correo;
    private javax.swing.JButton editar;
    private javax.swing.JLabel info;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JList<String> lista;
    private javax.swing.JLabel miembro;
    private javax.swing.JLabel nombres;
    private javax.swing.JButton quitar;
    // End of variables declaration//GEN-END:variables

    private void recuperar() {
        File f = new File(ruta);
        if (f.exists()) {
            controlador.recuperar(f.getAbsolutePath());
            actualizar();
        }
    }

    private void actualizar() {
        mLista.removeAllElements();
        int t = controlador.totalUsuarios();
        for (int i = 0; i < t; i++) {
            mLista.addElement(controlador.obtenerUsuario(i).nombre() + " " + controlador.obtenerUsuario(i).apellido());
        }
        info.setText(String.valueOf(t) + " miembros.");
    }

    private void mostrar(Usuario u) {
        nombres.setText("Nombres: " + u.nombres());
        apellidos.setText("Apellidos: " + u.apellidos());
        cedula.setText("Cedula: " + u.cedula());
        correo.setText("Correo: " + u.correo());
        celular.setText("Celular: " + u.celular());
        miembro.setText("Cargo: " + u.miembro());
        if (!u.ruta().isEmpty()) {
            try {
                label.setIcon(new ImageIcon(ImageIO.read(new File(u.ruta())).getScaledInstance(label.getWidth(), label.getHeight(), 0)));
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            label.setIcon(null);
        }
    }

    private void salir() {
        setVisible(false);
        dispose();
        System.exit(0);
    }

    private void quitar() {
        label.setText("");
        apellidos.setText("");
        cedula.setText("");
        celular.setText("");
        correo.setText("");
        miembro.setText("");
        nombres.setText("");
        info.setText("");
    }

    private void agregarNuevos() {
        String original = new File(controlador.obtenerUsuario(0).ruta()).getParent();
        try {
            ImportarFile imp = new ImportarFile(ruta, ";");
            String[][] data = imp.enCaracteres();
            for (String[] data1 : data) {
                if (data1.length == 9) {
                    Usuario user = controlador.darUsuario(data1);
                    if (nuevo(user)) {
                        File foto = new File(user.ruta());
                        user.cambiarRuta(original + "\\" + foto.getName());
                        controlador.anadirUsuario(user);
                    }
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    private boolean nuevo(Usuario user) {
        if (user == null) {
            return false;
        }
        for (int i = 0; i < controlador.totalUsuarios(); i++) {
            if (user.equals(controlador.obtenerUsuario(i))) {
                return false;
            }
        }
        return true;
    }

    private void exportar(String r) {
        int t = controlador.totalUsuarios();
        String[] data = new String[t];
        for (int i = 0; i < t; i++) {
            data[i] = controlador.obtenerUsuario(i).toString();
        }
        ExportarFile expf = new ExportarFile(r);
        expf.exportarDatos(data);
    }

}
